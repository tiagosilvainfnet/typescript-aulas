<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Document</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.2.0/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Oswald:wght@200;300;400;500&display=swap');
        
        *{
            font-family: 'Oswald', sans-serif;
        }

        /* Chrome, Safari, Edge, Opera */
        .number input::-webkit-outer-spin-button,
        .number input::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }

        form{
            max-width: 550px;
            margin: 0 auto;
        }

        /* Firefox */
        input[type=number].number {
        -moz-appearance: textfield;
        }
        label{
            display: block;
            text-align: center;
            margin-bottom: 10px;
        }
        .number{
            width: calc(16.66% - 2px);
            float: left;
            padding: 5px;
            box-sizing: border-box;
        }
        .number input{
            width: 100%;
            height: 70px;
            font-size: 4em;
            text-align: center;
            margin: 0;
            padding: 0;
            border: 1px solid #2c3e50;
            border-radius: 5px;
        }
        .button-area{
            padding: 5px;
        }
        button{
            cursor: pointer;
            color: #fff;
            background-color: #2c3e50;
            padding: 10px;
            width: 100%;
            border-radius: 10px;
            border: none;
            margin-top: 2em;
        }
        #message{
            color: #e74c3c;
            text-align: center;
            float: left;
            margin-top: 1.2em;
            width: 100%;
        }
    </style>
</head>
<body>
    <form>
        <div>
            <label>PIN</label>
            <div class="number">
                <input type="number" name="0" id="number_0">
            </div>
            <div class="number">
                <input type="number" name="1" id="number_1">
            </div>
            <div class="number">
                <input type="number" name="2" id="number_2">
            </div>
            <div class="number">
                <input type="number" name="3" id="number_3">
            </div>
            <div class="number">
                <input type="number" name="4" id="number_4">
            </div>
            <div class="number">
                <input type="number" name="5" id="number_5">
            </div>
        </div>
        <div id="message" style="display: none;">Digite o código PIN de 6 dígitos.</div>
        <div class="button-area">
            <button type="button" onclick="submitToken()">
                <i style="display: none;" class="fas fa-spinner fa-spin" id="loading"></i>
                <i style="display: none;" class="fa-regular fa-circle-check" id="check"></i>
                <i style="display: none;" class="fa-solid fa-circle-exclamation" id="error"></i>
                <span id="btn-text">VERIFICAR</span>
            </button>
        </div>
    </form>

    <script src="https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js"></script>
    <script>
        const numbers = document.querySelectorAll('.number input');
        const values = [null, null, null, null, null, null];
        const loading = document.querySelector('#loading');
        const check = document.querySelector('#check');
        const error = document.querySelector('#error');
        const btnText = document.querySelector('#btn-text');
        const button = document.querySelector('button');
        const message = document.querySelector('#message');
        const url = window.location.origin;
        const pin = window.location.search.split("?pin=")[1];

        const loadPin = () => {
            if(pin !== undefined){
                for(let i = 0 ; i < 6; i++){
                    document.querySelector(`#number_${i}`).value = pin[i];
                    values[i] = pin[i];
                }
            }
        }

        loadPin();

        numbers.forEach(number => {
            number.addEventListener('keyup', (event) => {
                let name = parseInt(event.currentTarget.name);
                let nb = parseInt(event.currentTarget.value);

                if(nb >= 0 && nb < 10 || isNaN(nb)){
                    values[name] = nb;
                }   
                event.currentTarget.value = values[name];

                let element = null;
                if(event.currentTarget.value === ""){
                    element = document.querySelector(`#number_${name - 1}`);
                }else{
                    element = document.querySelector(`#number_${name + 1}`);
                }

                if(element){
                    element.focus();
                }
            })
        })

        const submitToken = async () => {
            const localPin = values.join("");
            if(localPin.length === 6){
                message.style.display = 'none';
                loading.style.removeProperty('display');
                btnText.innerText = 'Carregando...';
                button.style.backgroundColor = '#2c3e50'
                error.style.display = 'none';
                check.style.display = 'none';

                try{
                    const result = await requestToken(localPin);
                    if(result.status === 200){
                        loading.style.display = 'none';
                        check.style.removeProperty('display');
                        btnText.innerText = result.data.msg;
                        button.style.backgroundColor = '#27ae60'
                        button.disabled = true

                        numbers.forEach(number => {
                            number.value = "";
                        })
                    }
                }catch(err){
                    loading.style.display = 'none';
                    error.style.removeProperty('display');
                    btnText.innerText = 'Erro ao validar e-mail';
                    button.style.backgroundColor = '#e74c3c'
                }
            }else{
                message.style.display = 'block';
            }
        }

        const requestToken = async (pin) => {
            try{
                const result = await axios({
                    method: 'POST',
                    url: `${url}/auth/confirm-email`,
                    data: {
                        pin
                    }
                })
                return result;
            }catch(err){
                throw err;
            }
        }


    </script>
</body>
</html>